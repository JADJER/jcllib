name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Conan
        id: install_conan
        uses: turtlebrowser/get-conan@main

      - name: Install requires through Conan
        id: install_req
        run: conan install ${{github.workspace}} -if ${{github.workspace}}/build --build=missing

      - name: Configure CMake
        id: configure_cmake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        id: build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        id: test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Install
        id: install
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --prefix instdir

      - name: Pack
        id: pack
        working-directory: ${{github.workspace}}/instdir
        run: zip -r jcllib *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ${{github.workspace}}/instdir/jcllib.zip
          asset_name: jcllib.zip
          asset_content_type: application/zip
